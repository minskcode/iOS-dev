// Lesson 2

let a = 3
let b : Float = 5.12
let c = 4.91
let sumInt = Int(Double(a) + Double(b) + c)
let sumFloat = Float(a) + b + Float(c)
let sumDouble = Double(a) + Double(b) + c
print(sumInt, sumFloat, sumDouble)
if Double(sumInt) < sumDouble {
  print("SumDouble has better accuracy")
}  else {
  print("sumInt has better accuracy")
}



// Lesson 3 - tuples

var myResults = (maxPushUps:30, maxPullUps:14, maxSitUps:50)
print(myResults)
var (pushes, pulls, sits) = myResults
print("Maximum number of push-ups is \(pushes)")
print("Maximum number of pull-ups is \(myResults.1)")
print("Maximum number of sit-ups is \(myResults.maxSitUps)")
var hisResults = (maxPushUps:32, maxPullUps:12, maxSitUps:57)
let forChange = myResults
myResults = hisResults
hisResults = forChange
print(myResults)
print(hisResults)


// Lesson 4 - Optionals

let a = "23"
let b = "25k"
let c = "24.1"
let d = "253"
let e = "abc"
if let intA = Int(a) {
print(intA)
} else {
print("Значение константы a не может быть приведено к Int")

let optA = 24
let optB = nil
let optC = -24k
let optD = -23
let optE = nill
let optK = sda
let optional = 231?
let as = k213
let bz = 1237
let bz1 = 4843
let bhh = 1231
let lbka = 481js8
let 9sj = 9dsjf
let eprst = forWhat?
let abvgd = gde?
let ijk = kji
let bjjj = kpi
asdijosdifjo
asdkljfsdkljasfd
msdkfmckmvxuvjxck
asdklfjsadioufaweoirjsdaflm
xclvknzvxcxcvzkxljds
lkjvclkx
sdkfj
asdkfsdkjfsdkfds

sdfkjsdjkkfsdlsfdasd
asdf
a
zx
xvsdf
zc

sasdzc
s
sd
sd
djhb
jkn
nn
jk
xc
xczxzc

xc
x
xc
v
x
sdlkjsdkljfd
skldjkfdmks
opitfgsl'dfg
dsgkljdflmgk
zxc

x
czxc
c
xc


xz
xzxz
xz
xz
xzxz

dsfgksdfklgjsd
gjkdflgdjkfgjkdlfgl
kkk
l,
dflksdkllkf
sdflkcvx,mvxm,
dsflksdfklklsd
sdaaaa
sdasd
zzzx
asdasd
af;lksdf
smvvnb
s;ldkfksdf
qeqwe
fdssdnvnxx
dsjflksdljk
ds

sada

asdzxc
zxcsa
asdqwe
sad
asd
asdzxczxc
asdmxcv
xclvzvl;xvk

zv
cxv
xzvcz
x
c


asd
asd
zx
z
zx
c
zcxzcz

zxcxzczxc
;lfkgdf
d
vc

xc
x
x
cv
cv
bvc
bc
vbc
vb

zzxcz
asd
q
w
qe
qwe

sad
sa
d
as
d
a
qw
e
qw
1aaasdasdzxzcxc
a
adasdasxz
zxczxbvcbvcb
fdgdfgdfg
vbcmvmc
dfgdfkgdkf
MVC
MVVM
VIPER
GCD
Combine
sdfa
safdkf
akkasmv
amfdlsm
sakflsd
adsfsdf
asdd
	l;fdklgfdk
cv;bmcvkb
fdgkdfkl;g
vbclvcb
vc
b
cvvbcvb
gjgh
l;l;

0[poo
kl;

k;ll
k
lk
kl

;l;k